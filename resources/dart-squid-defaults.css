/*
███████████████████████████████████████████████████████████████████████████████████████████
This file is where we maintain our "standard" widget-styles and selectors.
In addition, styles for widgets created in various test-cases are included.


We ultimately get the computed value of CSS styles applied to our Widgets,
via matching class-selector(s), using code like this (see Application.dart):

    document.defaultView.getComputedStyle(mBackgroundRect,null).getPropertyValue("stroke")

███████████████████████████████████████████████████████████████████████████████████████████
*/

/*
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
BEGIN: STANDARD definitions for Widgets and sub-classes

For four-side-specs, remember TRBL (Top, Right, Bottom, Left) order of values.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
*/

/*
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
This is the standard element used for application background
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
*/
.ApplicationCanvas {
    fill: #eeeeee;
    fill-opacity: 1;
    stroke: #aaaaff;
    stroke-width: 20px;
    stroke-opacity:   1;
    stroke-dasharray: 1,2;
}

/*
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
Any application "hints" will show styled as follows
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
*/
.Hint {
    fill: lemonchiffon;
    fill-opacity: 1;
    stroke: #333333;
    stroke-width: 1px;
}

/*
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
The default font to be used mainly for things like simple Captions / Labels, etc.
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
*/
.DefaultFont {
    border: 0;
    padding: 0;
    margin: 0;
    font-family: Helvetica, Arial, sans-serif;
    font-size: 14px;
    font-weight: normal;
    color: black;
}

@keyframes marquee {
	from {
		stroke: gold;
	}
	to  {
		stroke: red;
	}
}

.SelectedWidget {
    fill-opacity: .2;
    fill: black;
    stroke: gold;
    stroke-dasharray: 4, 2;
    stroke-width: 4px;
    animation-name: marquee;
    animation-duration: 1s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: ease-in-out;
}

/*
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
This is the default Widget setup.
Our Widget layout closely relates to the CSS box-model: http://www.w3.org/TR/CSS2/box.html
We use the following properties on our base selector to Style the Widget:

margin          : Distance to inset Outer border (from parentSVGElement bounding box);
    not that this can vary PER-SIDE.

padding         : Distance to inset ClientSVGElement from inner border; this can also
    vary PER-SIDE (e.g., padding-left)

fill            : Widget's background color

fill-opacity    : Widget's background opacity

stroke-opacity  : FRAME opacity (all sides will be the same opacity);
    border specifiers do not support opacity, so we use stroke-opacity for this.

border          : FRAME width AND color (with frame side(s) being optional: just specify zero-width)
    Valid border sub-properties: 'border-top', 'border-right', 'border-bottom', 'border-left')
    Note: border properties were used (instead of stroke-width) since SVG stroke-width
    has no concept of "sides".
    NOTE: you MUST specify a border-type (e.g., solid) or it will default to 'none/0px'
    even if you provide non-zero width.  E.g., choose 'border: 1px solid black;'

border-style    : FRAME stroke style.
    The ONLY SUPPORED STYLE IS "solid" for FRAME, though our outer/inner borders support more styles.

We can access border side-specifics via:
    'border-top-color', 'border-right-color', 'border-bottom-color', 'border-left-color' ('border-color')
    'border-top-style', 'border-right-style', 'border-bottom-style', 'border-left-style' ('border-style')
    'border-top-width', 'border-right-width', 'border-bottom-width', 'border-left-width' ('border-width')


NOTE: YOU MUST USE A valid unit of measure (e.g., px, pt, em) AFTER ANY SIZES in CSS or
they will intrepret to zero!!!  Have not tested with anything other than "px" so far.
The getComputedStyle ==> getPropertyValue ==> yields WHOLE NUMBER VALUES (in px), but
REQUIRES a specified UOM in stylesheet.  Numbers without UOM suffix yield ZERO!
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
*/
.Widget_Base {
    margin: 0px;
    padding: 10px;
    fill: skyblue;
    fill-opacity: .5;
}

.Widget_Frame {
    border: 10px #bdb76b;
    border-style: solid;  /*only valid border-style for our FRAME; IGNORED by Widget code currently, but MUST be set (see notes above)*/
    stroke-opacity:   1;
}


/*
═══════════════════════════════════════════════════════════════════════════════════════
We use the following properties on our border selector to further Style the Widget's
optional Outer/Inner borders:

stroke-opacity  : BORDER opacity (all sides will be the same opacity)

border          : BORDER width AND color AND style.
    See notes (above; FRAME portion of base-widget), since our inner/outer borders
    make same use of properties, plus we add support for other border-styles.
    We suport most http://www.w3.org/TR/CSS2/box.html#border-style-properties
    See Widget.dart for eBorderStyle enumerated types of border-styles we support.
═══════════════════════════════════════════════════════════════════════════════════════
*/
.Widget_BorderOuter {
    border: 2px groove black;
    stroke-opacity:   .8;   /* BORDER opacity */
}

.Widget_BorderInner {
    border: 2px inset black;
    stroke-opacity:   1;    /* FRAME opacity */
}



/*
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
This is the default Button setup.
Currently used in sample-app non-fully-native-SVG buttons (i.e., text rendered via FO).
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
*/
.WidgetButton_Base {
    margin: 2px;
    padding: 2px;
    fill: lightgray;
    fill-opacity: 1;
}

.WidgetButton_Frame {
    border: 2px #d3d3d3;
    border-style: solid;
    stroke-opacity:   1;
}

.WidgetButton_BorderOuter {
    border: 2px outset black;
    stroke-opacity:   1;
}

.WidgetButton_BorderInner {
    border: 1px none #a9a9a9;
    stroke-opacity:   1;
}


/*
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
This is the default Scrollbar class setup.   TODO: IN-PROGRESS / TESTING
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
*/
.RightScrollbarMetrics {
    border: 0px solid white;  /*FRAME*/
    fill: white;
    fill-opacity: .1;
    margin  : 0 -10px 0 0;   /*Negative margin, equal to width of border/padding (of myWidget) moves us over the frame/border */
    padding : 1px;
}


/*
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
Enumerate our STANDARD BORDER STYLE definitions here
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
*/

.NoneBorder {
    border: 0px none black;
    stroke-opacity:   1;  /*BORDER opacity*/
}

.SolidBorder {
    border: 1px solid black;
    stroke-opacity:   1;  /*BORDER opacity*/
}

.GrooveBorder {
    border: 1px groove black;
    stroke-opacity:   1;  /*BORDER opacity*/
}

.RidgeBorder {
    border: 1px ridge black;
    stroke-opacity:   1;  /*BORDER opacity*/
}

.OutsetBorder {
    border: 1px outset black;
    stroke-opacity:   1;  /*BORDER opacity*/
}

.InsetBorder {
    border: 1px inset black;
    stroke-opacity:   1;  /*BORDER opacity*/
}

.DoubleBorder {
    border: 1px double black;
    stroke-opacity:   1;  /*BORDER opacity*/
}

.RaisedBorder {
    border: 8px outset #3cb371;  /*combine with selector "UseVirtualBorder" to indicate our "raised" style*/
    stroke-opacity:   1;  /*BORDER opacity*/
}

.LoweredBorder {
    border: 2px inset black;  /*combine with selector "UseVirtualBorder" to indicate our "lowered" style*/
    stroke-opacity:   1;  /*BORDER opacity*/
}

.UseVirtualBorder {
    /* IMPORTANT: NEED THIS EMPTY DEFINITION HERE! */
}


/*
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
END: STANDARD definitions for Widgets and sub-classes
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
*/


/*
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
BEGIN: OTHER IN-PROGRESS / TESTING STUFF...
CSS USED IN VARIOUS TEST-CASES and/or DOCUMENTATION

TODO: Rather disorganized currently; clean this up some.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
*/

/*
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
TODO: NOT USED currently
Another set of "panel" styles.
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
*/
.WidgetPanel_Base {
    margin: 2px;
    padding: 10px;
    fill: black;
    fill-opacity: 1;
    border: 4px white;      /* FRAME */
    border-style: solid;    /* only valid border-style for our FRAME */
    stroke-opacity:   1;    /* FRAME opacity */
}

.WidgetPanel_BorderOuter {
    border: 2px solid black;
    stroke-opacity:   1;
}

.WidgetPanel_BorderInner {
    border: 1px none #a9a9a9;
    stroke-opacity:   1;
}


/*
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪
TODO: OTHER STANDARD definitions here that need to be implemented yet
These are conceptual placeholders that are important for full-UI features.
▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪

Application (level)...
InactiveWidgetColor : 'silver', InactiveTextFont, etc.
RequiredFieldsBackground {color: skyblue}
RequiredFieldsFont {font-weight: bold; font-color: black}
ReadOnlyFieldsBackground {color: grey}
ReadOnlyFieldsFont {stroke-opacity: 70; font italic, etc}
HintBackground   {fill    : 'lemonchiffon', fill-opacity: 70},

rect:hover {
  fill-opacity:     0.5;
  stroke-opacity:   0.5;
  stroke-dasharray: 1,2;
}

*/

#myWidget_Widget_Border_Outer_T1 {
    border: 12px purple;
    border-style: dashed;
    stroke-opacity:   .8;
}


.FOBackground {
    background-color: #333333;
}

.Widget_Base_Movable {
    fill: lightsteelblue;
    fill-opacity: .9;
    border: 4px solid #aaaaff;  /*FRAME*/
    stroke-opacity: 1;          /*FRAME opacity*/
}

.WidgetButtonContainer {
    fill: #bdb76b;
    fill-opacity: 1;
}

.Margin10 {
    margin: 10px;
}

.Padding10 {
    padding: 10px;
}

.L_R_Border20 {
    border-top-width: 0;
    border-bottom-width: 0;
    border-left-width: 20px;
    border-right-width: 20px;
}

.DarkBlueBorderComponent {
    border: 8px solid #00008b;
    stroke-opacity:   .8;       /*BORDER opacity*/
}

.TanFill {
    fill: tan;
}

.RedFill {
    fill: red;
    fill-opacity: .9;
}

.BlueFill {
    fill: blue;
    fill-opacity: .9;
}

.LightGreenFill {
    fill: lightgreen;
    fill-opacity: 1.0;
}

.LightPinkFill {
    fill: lightpink;
    fill-opacity: 1.0;
}

.container {
    fill-opacity: 0.5;
    fill: #FFFFFF;
}

.container2 {
    stroke-width: 20px;
    stroke: #aaaaff;
}

rect#PanelRect21 {
    stroke: #000000;
    fill: #0011FF;
    fill-opacity: 1;
}

.BoldRed {
    font-size: 20px;
    font-weight: bold;
    color: red;
}

.BoldBlack {
    font-size: 1.2em;
    font-weight: bold;
    color: black;
}

.SmallText {
    font-size: .8em;
    color: #ffd700;
}

.SmallText b {
    color: #ff8c00;
}

.MyWidget_Base {
    margin: 0;
    padding: 2px;
    fill: skyblue;
    fill-opacity: 1;
    border: 10px solid steelblue;   /*FRAME*/
    border-style: solid;
    stroke-opacity:   .8;           /*FRAME opacity*/
}


.SpeedButtons {
    margin : 0 10px 0 0;
    padding: 0px;
    border: 0px darkslategray;  /* FRAME */
    border-style: solid;        /* FRAME */
}


.CenteredTextButton {
    text-align:center;
    font-weight:bold;
}


.Notes_Base {
    margin: 2px;
    padding: 0px;
    fill: blue;
    fill-opacity: 1;
}

.LoweredInsetComponent {
    border: 4px inset black;
    stroke-opacity: 1;          /*BORDER opacity*/
}

.RaisedOutsetComponent {
    border-right: 4px outset black;
    border-left: 4px none black;
    stroke-opacity: 1;          /*BORDER opacity*/
}

li {
    margin-bottom: 12px;
}

.MenuButtonsContainer {
    margin: 0px;
    padding: 0px;
    fill: #333;
    fill-opacity: .7;
}

.MenuButtonsContainerFrame {
    border: 2px solid black;    /*FRAME*/
    stroke-opacity: 1;          /*FRAME opacity*/
}


/*
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
BEGIN: CSS USED BY SAMPLES WEB-PAGE(S)
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
*/

body {
    font-family: Verdana, Arial, sans-serif;
    font-size: 14px;
    font-weight: normal;
    text-decoration: none;
    padding: 0;
    margin: 0;
}

.no-padding {
    padding: 0;
}

h1 {
    font-family: "Times New Roman, Arial, Helvetica", Sans-serif;
    text-align: center;
    font-size: 2.0em;
    margin-top: 6px;
    margin-bottom: 6px;
    font-weight: bold;
    color: white;
    text-decoration: none;
}


h2 {
    font-family: "Arial, Helvetica", Sans-serif;
    padding: 8px;
    margin: 0;
    font-size: 1.5em;
    background-color: #333333;
    color: #DD7700;
    border-top: 1px solid white;
}

h3 {
    font-family: "Arial, Helvetica", Sans-serif;
    padding: 8px;
    margin: 0;
    font-size: 1.3em;
    background-color: #333333;
    color: #DD7700;
}


.Examples {
    padding: 8px 8px 24px 8px;
    text-align: justify;
    background-color: #404040;
    color: #CCC;
    border-bottom: 1px solid #666666;
}

div.Examples {
    font-family: "Arial, Helvetica", Sans-serif;
    font-size: 16px;
    padding: 8px 8px 24px 8px;
    text-align: justify;
    background-color: #404040;
    color: #CCC;
}

.Examples p {
    color: #CCC;
    font-family: "Arial, Helvetica", Sans-serif;
    font-size: 16px;
    padding: 0 0 8px 0;
}

.Examples a {
    color: #87cefa;
}

.Examples a:hover {
    background-color: #71b6e1;
    color: black;
}

.Examples b {
    color: #6EE6AD;
}

.Examples strong {
    color: #DD7700;
}
/*color: #DD7700;*/
/*color: #A95600;*/
/*color: #3D85C6;*/
